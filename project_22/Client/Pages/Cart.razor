@page "/cart"
@inject ICartService CartService

<PageTitle>Varukorg</PageTitle>

<h3>Varukorg</h3>

@if(cartProducts == null || cartProducts.Count == 0)
{
    <span>@message</span>
}
else
{
    <ul class="list-group">
        @foreach(var product in cartProducts)
        {
           <li class="list-group-item d-flex justify-content-between align-items-center">
               <div class="image-wrapper">
                   <img src="@product.ImageUrl" class="image"/>
               </div>
               <div>
                   <h5><a href="/product/@product.ProductId">@product.ProductName</a></h5>
               </div>
               <div class="cart-product-price">@product.Price SEK</div>
               <input type="number" value="@product.Qty" @onchange="@((ChangeEventArgs e) => UpdateQty(e, product))" min="1" />
               <button class="btn btn-danger" @onclick="@(() => RemoveCartProduct(product.ProductId))">Ta bort</button>
           </li>               
        }
        <div class="cart-product-price">
            Summa(@cartProducts.Count): @cartProducts.Sum(p => p.Price * p.Qty) SEK
        </div>
    </ul>
}

@code {
    List<CartProductResponse> cartProducts = null;
    string message = "Loading cart...";

    protected override async Task OnInitializedAsync()
    {
        await LoadCart();
    }

    private async Task RemoveCartProduct(int productId)
    {
        await CartService.RemoveCartProduct(productId);
        await LoadCart();
    }

    private async Task LoadCart()
    {
        if((await CartService.GetAllCartItems()).Count == 0)
        {
            message = "Din varukorg är tom.";
            cartProducts = new List<CartProductResponse>();
        }
        else
        {
            cartProducts = await CartService.GetAllCartProducts();
        }
    }

    private async Task UpdateQty(ChangeEventArgs e, CartProductResponse product)
    {
        product.Qty = int.Parse(e.Value.ToString());
        if (product.Qty < 1)
            product.Qty = 1;
        await CartService.UpdateQty(product);
    }
}
